---
ahoyapi: v2

commands:

  build:
    usage: Build or rebuild project.
    cmd: |
      ahoy clean
      (docker network prune -f > /dev/null && docker network inspect amazeeio-network > /dev/null || docker network create amazeeio-network)
      ahoy up -- --build --force-recreate
      docker cp -L . "$(docker compose ps -q cli)":/app/ || true
      ahoy install-site
      ahoy info 1

  info:
    usage: Print information about this project.
    cmd: |
      echo "  Project                  : " $(ahoy cli echo \${PROJECT})
      echo "  Drupal version           : " $(ahoy cli echo \$DRUPAL_VERSION)
      echo "  Site local URL           : " $(ahoy cli echo \$LOCALDEV_URL)
      echo "  Path to project          : " $(ahoy cli echo /app)
      echo "  Path to web root         : " $(ahoy cli echo /app/build/web)
      echo "  DB port on host          : " $(docker port $(docker compose ps -q mariadb) 3306 | cut -d : -f 2)
      echo "  Xdebug                   : " $(ahoy cli php -v|grep -q Xdebug && echo "Enabled" || echo "Disabled")
      if [ -n "$1" ]; then
        echo "  One-time login           : " $(ahoy login -- --no-browser)
      fi

  db:
    usage: Open DB in Sequel Ace.
    cmd: |
      uname -a | grep -i -q darwin && mdfind -name 'Sequel Ace'|grep -q "Ace" \
      && HOST_DB_PORT="$(docker port $(docker compose ps -q mariadb 2>/dev/null) 3306 2>/dev/null | cut -d : -f 2)" \
      && open "mysql://drupal:drupal@127.0.0.1:${HOST_DB_PORT}/drupal" -a "Sequel Ace" \
      || echo "Not a supported OS or Sequel Ace is not installed."

  # ----------------------------------------------------------------------------
  # Docker commands.
  # ----------------------------------------------------------------------------

  up:
    usage: Build and start Docker containers.
    cmd: docker compose up -d "$@" && if docker compose logs | grep -q "\[Error\]"; then exit 1; fi

  down:
    usage: Stop Docker containers and remove container, images, volumes and networks.
    cmd: if [ -f "docker-compose.yml" ]; then docker compose down --volumes > /dev/null 2>&1; fi

  start:
    usage: Start existing Docker containers.
    cmd: docker compose start "$@"

  stop:
    usage: Stop running Docker containers.
    cmd: docker compose stop "$@"

  restart:
    usage: Restart all stopped and running Docker containers.
    cmd: docker compose restart

  logs:
    usage: Show Docker logs.
    cmd: docker compose logs "$@"

  pull:
    usage: Pull latest docker images.
    cmd: if [ ! -z "$(docker image ls -q)" ]; then docker image ls --format \"{{.Repository}}:{{.Tag}}\" | grep uselagoon/ | grep -v none | xargs -n1 docker pull | cat; fi

  cli:
    usage: Start a shell inside CLI container or run a command.
    cmd: if \[ "${#}" -ne 0 \]; then docker compose exec -e DRUPAL_VERSION=${DRUPAL_VERSION:-10} -T cli bash -c "$*"; else docker compose exec cli bash; fi

  composer:
    usage: Run Composer commands in the CLI service container.
    cmd: docker compose exec -T cli composer "$@"

  drush:
    usage: Run Drush commands in the CLI service container.
    cmd: docker compose exec -T cli bash -c "drush -r /app/build/web -l \${LOCALDEV_URL} $*"

  # ----------------------------------------------------------------------------
  # Application commands.
  # ----------------------------------------------------------------------------

  login:
    usage: Login to a website.
    cmd: ahoy drush uli "$@"

  install-site:
    usage: Install a fixture test site.
    cmd: ahoy cli "./.circleci/install-site.sh"

  clean:
    usage: Remove containers and all build files.
    cmd: |
      ahoy down || true
      sleep 5
      chmod -Rf 777 build 2>&1 > /dev/null || true
      rm -rf \
        ./vendor \
        ./composer.lock \
        ./build \
        2>&1 > /dev/null || true

  reset:
    usage: "Reset environment: remove containers, all build, manually created and Drupal-Dev files."
    cmd: ahoy clean && rm -rf ./screenshots ./composer.lock

  lint:
    usage: Lint code.
    cmd: |
      ahoy cli "cp -Rf phpcs.xml phpstan.neon phpmd.xml build > /dev/null" \
      && ahoy cli "cd /app/build && ./vendor/bin/phpcs" \
      && ahoy cli "cd /app/build && ./vendor/bin/phpmd ../src text phpmd.xml" \
      && ahoy cli "cd /app/build && ./vendor/bin/phpmd ../tests/behat/bootstrap text phpmd.xml" \
      && ahoy cli "cd /app/build && ./vendor/bin/phpstan" \
      && ahoy cli "cd /app/build && ./vendor/bin/rector process ../src --clear-cache --dry-run || true"

  lint-fix:
    usage: Fix code.
    cmd: |
      ahoy cli "cp -Rf phpcs.xml phpstan.neon build > /dev/null" \
      && ahoy cli "cd /app/build && ./vendor/bin/rector process ../src --clear-cache" \
      && ahoy cli "cd /app/build && ./vendor/bin/phpcbf"

  test-bdd:
    usage: Run BDD tests.
    cmd: ahoy cli "cd /app/build && vendor/bin/behat -c /app/behat.yml --strict --colors --profile=d${DRUPAL_VERSION} $@"

  debug:
    usage: Enable PHP Xdebug.
    cmd: ahoy cli php -v | grep -q Xdebug || XDEBUG_ENABLE=true ahoy up cli php nginx && ahoy cli php -v | grep -q Xdebug && echo "Enabled debug configuration. Use 'ahoy up' to disable."

  update-fixtures:
    usage: Update fixture files for Drupal.
    cmd: rsync -av --delete --no-progress --exclude-from=tests/behat/fixtures/d$DRUPAL_VERSION/.rsync-exclude build/ tests/behat/fixtures/d$DRUPAL_VERSION/

entrypoint:
  - bash
  - "-c"
  - "-e"
  - |
    export DRUPAL_VERSION=${DRUPAL_VERSION:-10}
    bash -e -c "$0" "$@"
  - '{{cmd}}'
  - '{{name}}'
